import datetime
import discord.abc
from .asset import Asset
from .channel import DMChannel
from .colour import Colour
from .flags import PublicUserFlags
from .guild import Guild
from .message import Message
from typing import Any, List, Optional

class _UserTag:
    id: int

class BaseUser(_UserTag):
    name: str
    id: int
    discriminator: str
    bot: bool
    system: bool
    def __eq__(self, other: Any) -> bool: ...
    def __ne__(self, other: Any) -> bool: ...
    def __hash__(self) -> int: ...
    @property
    def public_flags(self) -> PublicUserFlags: ...
    @property
    def avatar(self) -> Optional[Asset]: ...
    @property
    def default_avatar(self) -> Asset: ...
    @property
    def display_avatar(self) -> Asset: ...
    @property
    def banner(self) -> Optional[Asset]: ...
    @property
    def accent_colour(self) -> Optional[Colour]: ...
    @property
    def accent_color(self) -> Optional[Colour]: ...
    @property
    def colour(self) -> Colour: ...
    @property
    def color(self) -> Colour: ...
    @property
    def mention(self) -> str: ...
    @property
    def created_at(self) -> datetime.datetime: ...
    @property
    def display_name(self) -> str: ...
    def mentioned_in(self, message: Message) -> bool: ...

class ClientUser(BaseUser):
    verified: bool
    locale: Optional[str]
    mfa_enabled: bool
    async def edit(self, *, username: str = ..., avatar: bytes = ...) -> ClientUser: ...

class User(BaseUser, discord.abc.Messageable):
    def __del__(self) -> None: ...
    @property
    def dm_channel(self) -> Optional[DMChannel]: ...
    @property
    def mutual_guilds(self) -> List[Guild]: ...
    async def create_dm(self) -> DMChannel: ...
